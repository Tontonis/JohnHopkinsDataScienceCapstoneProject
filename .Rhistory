formEd<-reformulate(termlabels = "Education", response = "Fertility")
formCathEd<-reformulate(termlabels = c("Catholic","Education"), response = "Fertility")
formAll<-reformulate(termlabels = c("Agriculture",
"Examination",
"Education",
"Catholic",
"Infant.Mortality"), response = "Fertility")
modelCatholic<-lm(formCath,data=dataSet)
modelEducation<-lm(formEd,data=dataSet)
modelCatholicEducation<-lm(formCathEd,data=dataSet)
modelAll<-lm(formAll,data=dataSet)
rmseModCatholic<- (summary(modelCatholic)$r.squared*100)
rmseModCatholic<-format(rmseModCatholic,nsmall=2)
rmseModEducation<- (summary(modelEducation)$r.squared*100)
rmseModEducation<-format(rmseModEducation,nsmall=2)
rmseModCatholicEducation<- (summary(modelCatholicEducation)$r.squared*100)
rmseModCatholicEducation<-format(rmseModCatholicEducation,nsmall=2)
rmseModAll<-summary(modelAll)$r.sqaured*100
rmseModAll<-format(rmseModAll,nsmall=2)
models<-c(deparse(formCath),deparse(formEd),deparse(formCathEd),departse(formAll))
rmses<-c(rmseModCatholic,rmseModEducation,rmseModCatholicEducation,rmseModAll)
modelTable<-data.frame(models,rmses)
names(modelTable)<-c("Formula","RMSE")
kable(modelTable,caption="Some Swiss Models")
View(dataSet)
View(dataSet)
modelCatholic<-lm(formCath,data=dataSet)
modelEducation<-lm(formEd,data=dataSet)
modelCatholicEducation<-lm(formCathEd,data=dataSet)
modelAll<-lm(formAll,data=dataSet)
View(model)
View(modelAll)
rmseModCatholic<- (summary(modelCatholic)$r.squared*100)
rmseModCatholic<-format(rmseModCatholic,nsmall=2)
rmseModEducation<- (summary(modelEducation)$r.squared*100)
rmseModEducation<-format(rmseModEducation,nsmall=2)
rmseModCatholicEducation<- (summary(modelCatholicEducation)$r.squared*100)
rmseModCatholicEducation<-format(rmseModCatholicEducation,nsmall=2)
rmseModAll<-summary(modelAll)$r.sqaured*100
rmseModAll<-format(rmseModAll,nsmall=2)
summary(modAll)
summary(modelAll)
rmseModCatholic<- (summary(modelCatholic)$r.squared*100)
rmseModCatholic<-format(rmseModCatholic,nsmall=2)
rmseModEducation<- (summary(modelEducation)$r.squared*100)
rmseModEducation<-format(rmseModEducation,nsmall=2)
rmseModCatholicEducation<- (summary(modelCatholicEducation)$r.squared*100)
rmseModCatholicEducation<-format(rmseModCatholicEducation,nsmall=2)
rmseModAll<-summary(modelAll)$r.squared*100
rmseModAll<-format(rmseModAll,nsmall=2)
models<-c(deparse(formCath),deparse(formEd),deparse(formCathEd),deparse(formAll))
rmses<-c(rmseModCatholic,rmseModEducation,rmseModCatholicEducation,rmseModAll)
modelTable<-data.frame(models,rmses)
names(modelTable)<-c("Formula","RMSE")
models
## This file is used for the week 1 quiz for the John Hopkins Data Science Capstone Project
library(stringr)
setwd("F:/JohnHopkinsDataScienceCapstoneProject/")
source("readInEnDataTest.R")
lineCount=0;
longestVal=0;
linesOfLove=0;
linesOfHate=0;
testLine<-"A computer once beat me at chess, but it was no match for me at kickboxing"
lineMatchCount=0;
while(TRUE) {
line=scan(enTwitterData,nlines=1,what="character",quiet=TRUE)
if(length(line)>longestVal) {
longestVal=length(line)
}
else if(length(line)==0) {
break
}
loveTest<-str_detect(line," love ");
if(loveTest==TRUE) {
linesOfLove<-linesOfLove+1
}
hateTest<-str_detect(line," hate ");
if(hateTest==TRUE) {
linesOfHate<-linesOfHate+1
}
if(str_detect(line,"biostats")==TRUE) {
print(line)
}
if(str_detect(line,testLine)==TRUE) {
lineMatchCount<-lineMatchCount+1
}
lineCount<-lineCount+1
}
print(linesOfLove)
print(linesOfHate)
print(longestVal)
print(lineCount)
print(lineMatchCount)
lineCount=0;
longestVal=0;
while(TRUE) {
line=scan(enBlogData,nlines=1,what="character",quiet=TRUE)
if(length(line)>longestVal) {
longestVal=length(line)
}
else if(length(line)==0) {
break
}
lineCount<-lineCount+1
}
print(longestVal)
print(lineCount)
lineCount=0;
longestVal=0;
while(TRUE) {
line=scan(enNewData,nlines=1,what="character",quiet=TRUE)
if(length(line)>longestVal) {
longestVal=length(line)
}
else if(length(line)==0) {
break
}
lineCount<-lineCount+1
}
print(longestVal)
print(lineCount)
close(enBlogData)
close(enTwitterData)
close(enNewData)
library(stringr)
setwd("F:/JohnHopkinsDataScienceCapstoneProject/")
source("readInEnDataTest.R")
lineCount=0;
longestVal=0;
linesOfLove=0;
linesOfHate=0;
testLine<-"A computer once beat me at chess, but it was no match for me at kickboxing"
lineMatchCount=0;
while(TRUE) {
line=scan(enTwitterData,nlines=1,what="character",sep=" ",quiet=TRUE)
if(length(line)>longestVal) {
longestVal=length(line)
}
else if(length(line)==0) {
break
}
loveTest<-str_detect(line," love ");
if(loveTest==TRUE) {
linesOfLove<-linesOfLove+1
}
hateTest<-str_detect(line," hate ");
if(hateTest==TRUE) {
linesOfHate<-linesOfHate+1
}
if(str_detect(line,"biostats")==TRUE) {
print(line)
}
if(str_detect(line,testLine)==TRUE) {
lineMatchCount<-lineMatchCount+1
}
lineCount<-lineCount+1
}
print(linesOfLove)
print(linesOfHate)
print(longestVal)
print(lineCount)
print(lineMatchCount)
lineCount=0;
longestVal=0;
while(TRUE) {
line=scan(enBlogData,nlines=1,what="character",sep=" ",quiet=TRUE)
if(length(line)>longestVal) {
longestVal=length(line)
}
else if(length(line)==0) {
break
}
lineCount<-lineCount+1
}
print(longestVal)
print(lineCount)
lineCount=0;
longestVal=0;
while(TRUE) {
line=scan(enNewData,nlines=1,what="character",sep=" ",quiet=TRUE)
if(length(line)>longestVal) {
longestVal=length(line)
}
else if(length(line)==0) {
break
}
lineCount<-lineCount+1
}
print(longestVal)
print(lineCount)
close(enBlogData)
close(enTwitterData)
close(enNewData)
source("readInEnDataTest.R")
lineCount=0;
longestVal=0;
linesOfLove=0;
linesOfHate=0;
testLine<-"A computer once beat me at chess, but it was no match for me at kickboxing"
lineMatchCount=0;
while(TRUE) {
line=scan(enTwitterData,nlines=1,what="character",sep="",quiet=TRUE)
if(length(line)>longestVal) {
longestVal=length(line)
}
else if(length(line)==0) {
break
}
loveTest<-str_detect(line," love ");
if(loveTest==TRUE) {
linesOfLove<-linesOfLove+1
}
hateTest<-str_detect(line," hate ");
if(hateTest==TRUE) {
linesOfHate<-linesOfHate+1
}
if(str_detect(line,"biostats")==TRUE) {
print(line)
}
if(str_detect(line,testLine)==TRUE) {
lineMatchCount<-lineMatchCount+1
}
lineCount<-lineCount+1
}
print(linesOfLove)
print(linesOfHate)
print(longestVal)
print(lineCount)
print(lineMatchCount)
lineCount=0;
longestVal=0;
while(TRUE) {
line=scan(enBlogData,nlines=1,what="character",sep="",quiet=TRUE)
if(length(line)>longestVal) {
longestVal=length(line)
}
else if(length(line)==0) {
break
}
lineCount<-lineCount+1
}
print(longestVal)
print(lineCount)
lineCount=0;
longestVal=0;
while(TRUE) {
line=scan(enNewData,nlines=1,what="character",sep="",quiet=TRUE)
if(length(line)>longestVal) {
longestVal=length(line)
}
else if(length(line)==0) {
break
}
lineCount<-lineCount+1
}
print(longestVal)
print(lineCount)
close(enBlogData)
close(enTwitterData)
close(enNewData)
library(tidyverse)
library(tidytext)
library(glue)
library(data.table)
setwd("F:/JohnHopkinsDataScienceCapstoneProject/")
source("readInEnDataTest.R")
lineCount=0;
longestVal=0;
linesOfLove=0;
linesOfHate=0;
testLine<-"A computer once beat me at chess, but it was no match for me at kickboxing"
lineMatchCount=0;
while(TRUE) {
line=scan(enTwitterData,nlines=1,what="character",sep="",quiet=TRUE)
if(length(line)>longestVal) {
longestVal=length(line)
}
else if(length(line)==0) {
break
}
loveTest<-str_detect(line," love ");
if(loveTest==TRUE) {
linesOfLove<-linesOfLove+1
}
hateTest<-str_detect(line," hate ");
if(hateTest==TRUE) {
linesOfHate<-linesOfHate+1
}
if(str_detect(line,"biostats")==TRUE) {
print(line)
}
if(str_detect(line,testLine)==TRUE) {
lineMatchCount<-lineMatchCount+1
}
lineCount<-lineCount+1
}
print(linesOfLove)
print(linesOfHate)
print(longestVal)
print(lineCount)
print(lineMatchCount)
lineCount=0;
longestVal=0;
while(TRUE) {
line=scan(enBlogData,nlines=1,what="character",sep="",quiet=TRUE)
if(length(line)>longestVal) {
longestVal=length(line)
}
else if(length(line)==0) {
break
}
lineCount<-lineCount+1
}
print(longestVal)
print(lineCount)
lineCount=0;
longestVal=0;
while(TRUE) {
line=scan(enNewData,nlines=1,what="character",sep="",quiet=TRUE)
if(length(line)>longestVal) {
longestVal=length(line)
}
else if(length(line)==0) {
break
}
lineCount<-lineCount+1
}
print(longestVal)
print(lineCount)
close(enBlogData)
close(enTwitterData)
close(enNewData)
setwd("F:/JohnHopkinsDataScienceCapstoneProject/")
source("readInEnDataTest.R")
lineCount=0;
longestVal=0;
linesOfLove=0;
linesOfHate=0;
testLine<-"A computer once beat me at chess, but it was no match for me at kickboxing"
lineMatchCount=0;
while(TRUE) {
line=readLines(enTwitterData,n=1,quiet=TRUE)
if(length(line)>longestVal) {
longestVal=length(line)
}
else if(length(line)==0) {
break
}
loveTest<-str_detect(line," love ");
if(loveTest==TRUE) {
linesOfLove<-linesOfLove+1
}
hateTest<-str_detect(line," hate ");
if(hateTest==TRUE) {
linesOfHate<-linesOfHate+1
}
if(str_detect(line,"biostats")==TRUE) {
print(line)
}
if(str_detect(line,testLine)==TRUE) {
lineMatchCount<-lineMatchCount+1
}
lineCount<-lineCount+1
}
print(linesOfLove)
print(linesOfHate)
print(longestVal)
print(lineCount)
print(lineMatchCount)
lineCount=0;
longestVal=0;
while(TRUE) {
line=readLines(enBlogData,n=1,quiet=TRUE)
if(length(line)>longestVal) {
longestVal=length(line)
}
else if(length(line)==0) {
break
}
lineCount<-lineCount+1
}
print(longestVal)
print(lineCount)
lineCount=0;
longestVal=0;
while(TRUE) {
line=readLines(enNewData,n=1,quiet=TRUE)
if(length(line)>longestVal) {
longestVal=length(line)
}
else if(length(line)==0) {
break
}
lineCount<-lineCount+1
}
print(longestVal)
print(lineCount)
close(enBlogData)
close(enTwitterData)
close(enNewData)
## This file is used for the week 1 quiz for the John Hopkins Data Science Capstone Project
library(tidyverse)
library(tidytext)
library(glue)
library(data.table)
setwd("F:/JohnHopkinsDataScienceCapstoneProject/")
source("readInEnDataTest.R")
lineCount=0;
longestVal=0;
linesOfLove=0;
linesOfHate=0;
testLine<-"A computer once beat me at chess, but it was no match for me at kickboxing"
lineMatchCount=0;
while(TRUE) {
line=readLines(enTwitterData,n=1,skipNul = TRUE)
if(length(line)>longestVal) {
longestVal=length(line)
}
else if(length(line)==0) {
break
}
loveTest<-str_detect(line," love ");
if(loveTest==TRUE) {
linesOfLove<-linesOfLove+1
}
hateTest<-str_detect(line," hate ");
if(hateTest==TRUE) {
linesOfHate<-linesOfHate+1
}
if(str_detect(line,"biostats")==TRUE) {
print(line)
}
if(str_detect(line,testLine)==TRUE) {
lineMatchCount<-lineMatchCount+1
}
lineCount<-lineCount+1
}
install.packages(c("tidyverse", "tidytext", "glue", "data.table"))
## This file is used for the week 1 quiz for the John Hopkins Data Science Capstone Project
library(tidyverse)
library(tidytext)
library(glue)
library(data.table)
setwd("F:/JohnHopkinsDataScienceCapstoneProject/")
source("readInEnDataTest.R")
lineCount=0;
longestVal=0;
linesOfLove=0;
linesOfHate=0;
testLine<-"A computer once beat me at chess, but it was no match for me at kickboxing"
lineMatchCount=0;
while(TRUE) {
line=readLines(enTwitterData,n=1,skipNul = TRUE)
if(length(line)>longestVal) {
longestVal=length(line)
}
else if(length(line)==0) {
break
}
loveTest<-str_detect(line," love ");
if(loveTest==TRUE) {
linesOfLove<-linesOfLove+1
}
hateTest<-str_detect(line," hate ");
if(hateTest==TRUE) {
linesOfHate<-linesOfHate+1
}
if(str_detect(line,"biostats")==TRUE) {
print(line)
}
if(str_detect(line,testLine)==TRUE) {
lineMatchCount<-lineMatchCount+1
}
lineCount<-lineCount+1
}
print(linesOfLove)
print(linesOfHate)
print(longestVal)
print(lineCount)
print(lineMatchCount)
lineCount=0;
longestVal=0;
while(TRUE) {
line=readLines(enBlogData,n=1,skipNul = TRUE)
if(length(line)>longestVal) {
longestVal=length(line)
}
else if(length(line)==0) {
break
}
lineCount<-lineCount+1
}
print(longestVal)
print(lineCount)
lineCount=0;
longestVal=0;
while(TRUE) {
line=readLines(enNewData,n=1,skipNul = TRUE)
if(length(line)>longestVal) {
longestVal=length(line)
}
else if(length(line)==0) {
break
}
lineCount<-lineCount+1
}
print(longestVal)
print(lineCount)
close(enBlogData)
close(enTwitterData)
close(enNewData)
